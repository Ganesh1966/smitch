/*
 * This file is generated by jOOQ.
 */
package com.example.demo.db.jooqs.tables.records;


import com.example.demo.db.jooqs.tables.AuthorizationToken;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthorizationTokenRecord extends UpdatableRecordImpl<AuthorizationTokenRecord> implements Record4<String, String, OffsetDateTime, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.authorization_token.jwt_token</code>.
     */
    public void setJwtToken(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.authorization_token.jwt_token</code>.
     */
    public String getJwtToken() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.authorization_token.key</code>.
     */
    public void setKey(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.authorization_token.key</code>.
     */
    public String getKey() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.authorization_token.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.authorization_token.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>public.authorization_token.updated_at</code>.
     */
    public void setUpdatedAt(OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.authorization_token.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, OffsetDateTime, OffsetDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, OffsetDateTime, OffsetDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return AuthorizationToken.AUTHORIZATION_TOKEN.JWT_TOKEN;
    }

    @Override
    public Field<String> field2() {
        return AuthorizationToken.AUTHORIZATION_TOKEN.KEY;
    }

    @Override
    public Field<OffsetDateTime> field3() {
        return AuthorizationToken.AUTHORIZATION_TOKEN.CREATED_AT;
    }

    @Override
    public Field<OffsetDateTime> field4() {
        return AuthorizationToken.AUTHORIZATION_TOKEN.UPDATED_AT;
    }

    @Override
    public String component1() {
        return getJwtToken();
    }

    @Override
    public String component2() {
        return getKey();
    }

    @Override
    public OffsetDateTime component3() {
        return getCreatedAt();
    }

    @Override
    public OffsetDateTime component4() {
        return getUpdatedAt();
    }

    @Override
    public String value1() {
        return getJwtToken();
    }

    @Override
    public String value2() {
        return getKey();
    }

    @Override
    public OffsetDateTime value3() {
        return getCreatedAt();
    }

    @Override
    public OffsetDateTime value4() {
        return getUpdatedAt();
    }

    @Override
    public AuthorizationTokenRecord value1(String value) {
        setJwtToken(value);
        return this;
    }

    @Override
    public AuthorizationTokenRecord value2(String value) {
        setKey(value);
        return this;
    }

    @Override
    public AuthorizationTokenRecord value3(OffsetDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public AuthorizationTokenRecord value4(OffsetDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public AuthorizationTokenRecord values(String value1, String value2, OffsetDateTime value3, OffsetDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthorizationTokenRecord
     */
    public AuthorizationTokenRecord() {
        super(AuthorizationToken.AUTHORIZATION_TOKEN);
    }

    /**
     * Create a detached, initialised AuthorizationTokenRecord
     */
    public AuthorizationTokenRecord(String jwtToken, String key, OffsetDateTime createdAt, OffsetDateTime updatedAt) {
        super(AuthorizationToken.AUTHORIZATION_TOKEN);

        setJwtToken(jwtToken);
        setKey(key);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
    }
}
